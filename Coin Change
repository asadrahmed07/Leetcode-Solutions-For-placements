//leetcode Problem no. 322
class Solution {
    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        
        int[][] dp = new int[n+1][amount+1];         // Intialization
        
        for(int i = 0; i < n+1; i++) {
            for(int j = 0; j < amount+1; j++) {
                if(i == 0 && j!=0) {
                    dp[i][j] = 100000;
                }
                if(j == 0) {
                    dp[i][j] = 0;
                }
            }
        }
        
                                                  
        for(int i = 1 ; i < n+1; i++) {                  // tabulization
            for(int j = 1; j < amount+1; j++) {
                if(coins[i-1] <= j) {
                    dp[i][j] = Math.min(1+dp[i][j-coins[i-1]] , dp[i-1][j]);           
                }
                else {
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        
        if(dp[n][amount] > 1000) return -1;
        else return dp[n][amount];
    }
}
